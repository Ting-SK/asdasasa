{"version":3,"sources":["globalStyles.js","components/ContentLayout/styles.js","components/ContentLayout/ContentLayout.js","core/context.js","ui/CheckBox/styles.js","ui/CheckBox/CheckBox.js","ui/Button/styles.js","ui/Button/Button.js","components/Filters/styles.js","components/Filters/Filters.js","ui/CatViewContent/CatViewContent.js","components/CatView/styles.js","components/CatView/CatView.js","components/CatView/hooks.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","AppWrapper","styled","div","ContentWrapper","ContentLayout","children","AppContext","createContext","AppProvider","props","useState","enabled","setEnabled","refreshed","setRefreshed","enable","refresh","values","dataSearch","setDataSearch","Provider","value","useAppContext","useContext","CheckEnabledWrapper","CheckBox","onChange","name","label","checked","type","GetBtnContainer","button","Button","onClick","Wrapper","Filters","changeEnabled","useCallback","event","target","changeRefreshed","CatViewContent","loading","error","data","src","alt","width","height","CatPicWrapper","CatView","setData","setLoading","setError","interval","useRef","request","fetch","then","response","json","result","map","el","url","catch","startRefreshInterval","current","setInterval","clearRefreshInterval","clearInterval","useEffect","console","log","useCatPic","getCat","App","root","document","querySelector","render"],"mappings":"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","file":"static/js/main.b6a8b2a1.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n *{\r\n   outline: none;\r\n }\r\n body {\r\n   font-family: Tahoma, Helvetica, Arial, Roboto, sans-serif;\r\n   margin: 0;\r\n   padding: 0;\r\n   list-style: none;\r\n   text-decoration: none;\r\n }\r\n li{\r\n   list-style: none;\r\n }\r\n a {\r\n   text-decoration: none;\r\n }\r\n h1, h2, h3, h4, h5, h6, p, ul {\r\n   margin: 0;\r\n   padding: 0;\r\n }\r\n`;\r\n\r\nexport const AppWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  border: 1px solid #000;\r\n`;\r\n","import React from \"react\";\r\nimport { ContentWrapper } from \"./styles\";\r\n\r\nexport const ContentLayout = ({ children }) => {\r\n  return <ContentWrapper>{children}</ContentWrapper>;\r\n};\r\n","import React, { createContext, useContext, useState } from \"react\";\r\n\r\nconst AppContext = createContext({});\r\n\r\nexport const AppProvider = (props) => {\r\n  const [enabled, setEnabled] = useState(false);\r\n  const [refreshed, setRefreshed] = useState(false);\r\n  const [dataSearch, setDataSearch] = useState({\r\n    enable: false,\r\n    refresh: false,\r\n  });\r\n  let values = {\r\n    enabled,\r\n    setEnabled,\r\n    refreshed,\r\n    setRefreshed,\r\n    dataSearch,\r\n    setDataSearch,\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={values}>{props.children}</AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n","import styled from \"styled-components\";\r\n\r\nexport const CheckEnabledWrapper = styled.div`\r\n  & label {\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin: 5px 0;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { CheckEnabledWrapper } from \"./styles\";\r\n\r\nexport const CheckBox = ({\r\n  value = \"true\",\r\n  onChange,\r\n  name,\r\n  label,\r\n  checked = false,\r\n}) => (\r\n  <CheckEnabledWrapper>\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        checked={checked}\r\n      />\r\n      <div>{label}</div>\r\n    </label>\r\n  </CheckEnabledWrapper>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const GetBtnContainer = styled.button`\r\n  width: 60%;\r\n  height: 50px;\r\n  font-size: 18px;\r\n`;\r\n","import React from \"react\";\r\nimport { GetBtnContainer } from \"./styles\";\r\n\r\nexport const Button = ({ children, onClick }) => {\r\n  return <GetBtnContainer onClick={onClick}>{children}</GetBtnContainer>;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n  padding: 10px;\r\n`;\r\n","import React, { useCallback } from \"react\";\r\nimport { useAppContext } from \"../../core\";\r\nimport { CheckBox } from \"../../ui\";\r\nimport { Wrapper } from \"./styles\";\r\n\r\nexport const Filters = () => {\r\n  const { enabled, setEnabled, refreshed, setRefreshed } = useAppContext();\r\n\r\n  const changeEnabled = useCallback(\r\n    (event) => {\r\n      const { checked } = event.target;\r\n      setEnabled(checked);\r\n    },\r\n    [setEnabled]\r\n  );\r\n\r\n  const changeRefreshed = useCallback(\r\n    (event) => {\r\n      const { checked } = event.target;\r\n      setRefreshed(checked);\r\n    },\r\n    [setRefreshed]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <CheckBox label=\"Enabled\" checked={enabled} onChange={changeEnabled} />\r\n      <CheckBox\r\n        label=\"Auto refresh every 5 seconds\"\r\n        checked={refreshed}\r\n        onChange={changeRefreshed}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CatViewContent = ({ loading, error, data }) => {\r\n  if (error) {\r\n    return <h3>{error}</h3>;\r\n  }\r\n  if (loading) {\r\n    return <h3>Loading...</h3>;\r\n  }\r\n  if (data) {\r\n    return <img src={data} alt=\"cat\" width=\"640px\" height=\"424px\" />;\r\n  }\r\n  return <div>Cat View is empty</div>;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const CatPicWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 640px;\r\n  height: 424px;\r\n  background-color: gray;\r\n`;\r\n","import React, { useCallback } from \"react\";\r\nimport { Button } from \"../../ui\";\r\nimport { CatViewContent } from \"../../ui/CatViewContent\";\r\nimport { useCatPic } from \"./hooks\";\r\nimport { CatPicWrapper } from \"./styles\";\r\n\r\nexport const CatView = () => {\r\n  const { request, data, loading, error } = useCatPic();\r\n\r\n  const getCat = useCallback(() => {\r\n    request();\r\n  }, [request]);\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={getCat}>Get Cat</Button>\r\n      <CatPicWrapper>\r\n        <CatViewContent loading={loading} error={error} data={data} />\r\n      </CatPicWrapper>\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport { useAppContext } from \"../../core\";\r\n\r\nexport const useCatPic = () => {\r\n  const { enabled, refreshed } = useAppContext();\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const interval = useRef(null);\r\n\r\n  const request = useCallback(() => {\r\n    setLoading(true);\r\n    if (!enabled) {\r\n      setError(\"Need to be enabled\");\r\n    } else {\r\n      setError(\"\");\r\n      fetch(`https://api.thecatapi.com/v1/images/search`)\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n          setData(result.map((el) => el.url));\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => setError(error));\r\n    }\r\n  }, [enabled]);\r\n\r\n  const startRefreshInterval = useCallback(() => {\r\n    interval.current = setInterval(() => {\r\n      request();\r\n    }, 5000);\r\n  }, [interval, request]);\r\n\r\n  const clearRefreshInterval = useCallback(() => {\r\n    interval.current = clearInterval(interval.current);\r\n  }, [interval]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"refreshed hook\", refreshed);\r\n    if (refreshed) {\r\n      startRefreshInterval();\r\n    } else {\r\n      clearRefreshInterval();\r\n    }\r\n    return () => clearRefreshInterval();\r\n  }, [refreshed, clearRefreshInterval, startRefreshInterval]);\r\n\r\n  return {\r\n    data,\r\n    loading,\r\n    error,\r\n    request,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { AppWrapper, GlobalStyle } from \"./globalStyles\";\r\nimport { ContentLayout, Filters, CatView } from \"./components\";\r\n\r\nexport const App = () => {\r\n  return (\r\n    <AppWrapper>\r\n      <GlobalStyle />\r\n      <ContentLayout>\r\n        <Filters />\r\n        <CatView />\r\n      </ContentLayout>\r\n    </AppWrapper>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { App } from \"./App\";\r\nimport { AppProvider } from \"./core/context\";\r\n\r\nconst root = document.querySelector(\"#root\");\r\nconst AppRender = () => {\r\n  render(\r\n    <AppProvider>\r\n      <App />\r\n    </AppProvider>,\r\n    root\r\n  );\r\n};\r\nAppRender();\r\n"],"sourceRoot":""}